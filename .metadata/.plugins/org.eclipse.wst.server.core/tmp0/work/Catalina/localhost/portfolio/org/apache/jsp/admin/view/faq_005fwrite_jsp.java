/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2023-10-19 11:11:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

public final class faq_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/admin/view/./ad_menu.jsp", Long.valueOf(1697633106000L));
    _jspx_dependants.put("/admin/view/./ad_copy.jsp", Long.valueOf(1696493190000L));
    _jspx_dependants.put("/admin/view/./f_write.jsp", Long.valueOf(1697097250000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Date t99 = new Date();
DateFormat d99 = new SimpleDateFormat("yyyyMMddhms");
String d992 = d99.format(t99);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/page_default.css?v=");
      out.print(d992);
      out.write("\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/admin_css.css?v=");
      out.print(d992);
      out.write("\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\">\r\n");
      out.write("<!-- 신규추가된 css 파일 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/notice.css?v=");
      out.print(d992);
      out.write("\">\r\n");
      out.write("<!-- 신규추가된 css 파일 끝-->\r\n");
      out.write("<title>관리자 페이지</title>\r\n");
      out.write("<script src=\"https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js?v=");
      out.print(d992);
      out.write("\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write('\r');
      out.write('\n');

String id =(String) session.getAttribute("name");

      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("<div class=\"menusize\">\r\n");
      out.write("    <ul id=\"menus\">\r\n");
      out.write("        <li class=\"topmenu1\">ADMINISTRATOR</li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./info_main.do\">환경설정</a></li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./member_main.do\">회원관리</a></li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./notice_main.do\">공지사항 관리</a></li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./faq_main.do\">FAQ</a></li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./reserve_main.do\">예약현황</a></li>\r\n");
      out.write("        <li class=\"topmenu2\"><a href=\"./config_main.do\">관리자현황</a></li>\r\n");
      out.write("        <li class=\"topmenu3\">");
      out.print(id);
      out.write("님 환영합니다  <a href=\"./logout.do\">[로그아웃]</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write(" </div>\r\n");
      out.write("<div class=\"menuline\"></div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<!-- FAQ 등록 시작 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Date fdate = new Date();
DateFormat fwrsf = new SimpleDateFormat("yyyyMMddhms");
String fwsrfs = fwrsf.format(fdate);

      out.write("    \r\n");
      out.write("<!-- FAQ 등록 시작 -->\r\n");
      out.write("<main class=\"page_main\">\r\n");
      out.write("<section class=\"page_section\">\r\n");
      out.write("<div class=\"listbody\">\r\n");
      out.write("    <div class=\"protitle\">FAQ 등록</div>\r\n");
      out.write("    <form id=\"fWriteForm\" method=\"post\" action=\"./faq_writeok.do\">\r\n");
      out.write("	    <div class=\"procho\">\r\n");
      out.write("	       <section class=\"data_listsview\">\r\n");
      out.write("	       <ol>\r\n");
      out.write("	       <li>질문 제목</li>\r\n");
      out.write("	       <li><input type=\"text\" name=\"fquestion\" class=\"notice_in in1\"></li>\r\n");
      out.write("	       <li>글쓴이</li>\r\n");
      out.write("	       <li><input type=\"text\" id=\"fwriter\" name=\"fwriter\" class=\"notice_in in2\" readonly></li> <li style=\"height:520px;\">질문 내용</li>\r\n");
      out.write("	       <li style=\"height:520px; padding-top: 10px;\">\r\n");
      out.write("	       <textarea id=\"editor2\" class=\"notice_in in3\" name=\"fanswer\"></textarea>\r\n");
      out.write("	       </li>      \r\n");
      out.write("	       </ol>\r\n");
      out.write("	       <span class=\"notice_btns\">\r\n");
      out.write("	       <input type=\"button\" value=\"FAQ 등록\" id=\"writeBtn\" class=\"meno_btn2\"></span>\r\n");
      out.write("	       </section>\r\n");
      out.write("	    </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div> \r\n");
      out.write("</section>\r\n");
      out.write("</main>\r\n");
      out.write("<!-- FAQ 등록 끝 -->\r\n");
      out.write("<script>\r\n");
      out.write("/*글쓴이 readOnly 값 자동저장 */\r\n");
      out.write("window.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    var loggedInUsername = '");
      out.print(session.getAttribute("name") );
      out.write("';\r\n");
      out.write("    var writerInput = document.querySelector('#fwriter');\r\n");
      out.write("    //console.log(loggedInUsername);\r\n");
      out.write("    writerInput.value = loggedInUsername;\r\n");
      out.write("});\r\n");
      out.write("CKEDITOR.replace(\"editor2\");\r\n");
      out.write("</script>\r\n");
      out.write("<script src=../js/f_write.js?v=");
      out.print(fwsrfs );
      out.write("></script>\r\n");
      out.write("\r\n");
      out.write("<!-- FAQ 등록 끝 -->\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("<div class=\"menusize\">Copyright ⓒ 2023 Raemian 분양안내 관리 시스템 All rights reserved</div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
